[{"/Users/rto/Desktop/Habit-Tracker/frontend/src/index.js":"1","/Users/rto/Desktop/Habit-Tracker/frontend/src/reportWebVitals.js":"2","/Users/rto/Desktop/Habit-Tracker/frontend/src/App.js":"3","/Users/rto/Desktop/Habit-Tracker/frontend/src/store.js":"4","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Home.js":"5","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Login.js":"6","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/TrackHabit.js":"7","/Users/rto/Desktop/Habit-Tracker/frontend/src/query.js":"8","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/Header.js":"9","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/NewHabit.js":"10","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/HabitCard.js":"11"},{"size":500,"mtime":1607443077526,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607443077526,"results":"14","hashOfConfig":"13"},{"size":1793,"mtime":1610817814507,"results":"15","hashOfConfig":"13"},{"size":961,"mtime":1610817814512,"results":"16","hashOfConfig":"13"},{"size":2849,"mtime":1610821790605,"results":"17","hashOfConfig":"13"},{"size":13859,"mtime":1610821248509,"results":"18","hashOfConfig":"13"},{"size":2417,"mtime":1610817814510,"results":"19","hashOfConfig":"13"},{"size":473,"mtime":1610817814511,"results":"20","hashOfConfig":"13"},{"size":828,"mtime":1610817814511,"results":"21","hashOfConfig":"13"},{"size":3771,"mtime":1610817814511,"results":"22","hashOfConfig":"13"},{"size":1484,"mtime":1610821254521,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13uy812",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"/Users/rto/Desktop/Habit-Tracker/frontend/src/index.js",[],["51","52"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/reportWebVitals.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/App.js",["53","54","55","56","57"],"import React from 'react';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router,\n         Switch,\n         Route,\n         Redirect,\n         useHistory\n} from 'react-router-dom';\nimport { gql, useLazyQuery } from '@apollo/client';\nimport 'antd/dist/antd.css';\nimport { StateProvider, store } from './store';\n\n//Apollo client object. Used to make requests to the graphql API.\nconst client = new ApolloClient({\n  uri: 'https://habit-tracker.hasura.app/v1/graphql',\n  cache: new InMemoryCache(),\n  headers:{\n    'x-hasura-access': process.env.REACT_APP_API_PASS,\n  },\n});\n\nfunction PrivateRoute({ children, ...rest }) {\n\n  const { state, dispatch } = React.useContext(store);\n  const sessionStore = sessionStorage.getItem('HabitTrackerUser');      // session storage user's emailID\n  const [ isAuthenticated, setAuthenticated ] = React.useState( !!state.full_name || !!sessionStore);\n  const history = useHistory();\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",       // redirect if not autheticated\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n\n  return (\n   <StateProvider>\n      <ApolloProvider client={client}>\n         <Router>\n             <Switch>\n                 <Route exact path=\"/login\">\n                     <Login />\n                 </Route>\n                 <PrivateRoute exact path=\"/\">\n                     <Home />\n                 </PrivateRoute>\n             </Switch>\n         </Router>\n      </ApolloProvider>\n   </StateProvider>\n  );\n}\n\nexport default App;","/Users/rto/Desktop/Habit-Tracker/frontend/src/store.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Home.js",["58","59","60"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Login.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/TrackHabit.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/query.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/Header.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/NewHabit.js",["61","62","63","64","65"],"import React, { useState } from 'react'\nimport { format } from 'date-fns'\nimport { \n    Typography, \n    Form, \n    DatePicker, \n    Select,\n    InputNumber,\n    Input,\n    TimePicker,\n    Button\n    } from 'antd';\nimport { gql, useMutation } from '@apollo/client'\nimport { GET_USER_DETAILS } from '../../query';\nconst { RangePicker } = DatePicker;\n\nconst headerContainer = {\n    display:'flex',\n    flexDirection:'row', \n    justifyContent:'space-between'\n}\n\nconst ADD_NEW_HABIT = gql`\n    mutation AddNewHabit($user_id: String!, $habit_name: String!, $type: habit_unit!, $note: String, $bad_habit: Boolean, $start_date: date, $end_date: date, $reps: Int) {\n        insert_habits_one(object: {\n        name: $habit_name, \n        user: $user_id, \n        start_date: $start_date, \n        remainder_note: $note, \n        unit: $type, \n        end_date: $end_date, \n        reps: $reps,\n        bad_habit: $bad_habit\n        }) {\n        id\n        }\n    }  \n`;\n\nexport default function NewHabit({ setVisible, userID }) {\n\n    const [form] = Form.useForm();\n    const [habitType, setHabitType] = useState(null);\n    const [addNewHabit, {data, error}] = useMutation(ADD_NEW_HABIT);\n\n    const onFinish = (values) => {\n        console.log('values:::::::::::::::::::', format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"))\n        addNewHabit({\n            variables: {\n                user_id: userID,\n                habit_name: values.habit_name,\n                type: values.type,\n                start_date: format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"),\n                end_date: format(new Date(values.date_range[1]._d), \"yyyy-MM-dd\"),\n                reps: values.reps_no ? values.reps_no : null\n            },\n            refetchQueries: [{ query: GET_USER_DETAILS, variables: { email: userID } }],\n        })\n        form.resetFields();\n        setVisible(false);\n    }\n    const onFormFail = (value) => {\n        setVisible(true);\n    }\n\n    return (\n        <Form\n            labelCol={{ span: 4 }}\n            wrapperCol={{ span: 14 }}\n            layout=\"horizontal\"\n            form={form}\n            onFinish={onFinish}\n            onFinishFailed={onFormFail}\n            id='new_habit'\n        >\n            <Form.Item\n                name='habit_name'\n                label=\"Habit\"\n                rules={[{ required: true, message: \"Please input Habit's Name!\" }]}\n            >\n                <Input placeholder=\"Enter Name of the Habit\" />\n            </Form.Item>\n            <Form.Item\n                name='type'\n                label=\"Type\"\n                rules={[{ required: true, message: \"Please Select Type of Habit!\" }]}\n            >\n                <Select onChange={(type)=>setHabitType(type)} placeholder=\"Enter Type of Habit\">\n                    <Select.Option value=\"CHECK\">Yes/No</Select.Option>\n                    <Select.Option value=\"REPS\">Integer Habit(Reps)</Select.Option>\n                    <Select.Option value=\"DURATION\">Timed Habit</Select.Option>\n                    {/* <Select.Option value=\"DURATION\">Bad Habit</Select.Option> */}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name='date_range'\n                label=\"Date\"\n                rules={[{ required: true, message: \"Please Select date!\" }]}\n            >\n                <RangePicker />\n            </Form.Item>\n            { (habitType==='REPS') &&\n                <Form.Item name=\"reps_no\" label=\"Count\">\n                    <InputNumber />\n                </Form.Item>\n            }\n            { (habitType==='DURATION') &&\n                <Form.Item name=\"timer\" label=\"Timer\">\n                    <TimePicker showNow={false} />\n                </Form.Item>\n            }\n        </Form>\n    )\n}\n",["66","67"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/HabitCard.js",["68","69","70"],"import React from 'react';\nimport { \n  Card, \n  Progress \n} from 'antd';\nimport { format } from 'date-fns'\n\nconst progress = {\n  display: 'flex',\n  flexDirection: 'col',\n  justifyContent: 'space-between'\n}\n\nconst circle = (day) => {\n  // console.log(':::::::',  day)\n  return day\n}\n\nexport default function HabitCard({habitData}) {\n  habitData.history.forEach((data)=>{\n    var date = data.date.split('-');\n    // console.log('history:::::::::::::',format(new Date(date), \"iii\"))\n  })\n  const [dayStatus, setStatus] = React.useState(false);\n  // console.log('habitData: ',habitData)\n  const days = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    return (\n      <div className=\"site-card-border-less-wrapper\" style={{paddingRight:30, paddingBottom: 30}}>\n        <Card title={habitData.name} bordered={true} style={{ width: 500 }}>\n          <div style={progress}>\n            {\n              days.map((day, index) => (\n                <div key={index} onClick={()=>setStatus(true)} >\n                  <Progress type=\"circle\" percent={100} width={50} format={circle} key={index} />\n                  <p>{day}</p>\n                </div>\n              ))\n            }\n            \n            {/* <Progress type=\"circle\" percent={70} width={80} status=\"exception\" />\n            <Progress type=\"circle\" percent={100} width={80} /> */}\n          </div>\n          <p>Card content</p>\n          <p>Card content</p>\n          <p>Card content</p>\n        </Card>\n      </div>\n    )\n}\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":13},{"ruleId":"75","severity":1,"message":"79","line":11,"column":15,"nodeType":"77","messageId":"78","endLine":11,"endColumn":27},{"ruleId":"75","severity":1,"message":"80","line":26,"column":18,"nodeType":"77","messageId":"78","endLine":26,"endColumn":26},{"ruleId":"75","severity":1,"message":"81","line":28,"column":28,"nodeType":"77","messageId":"78","endLine":28,"endColumn":44},{"ruleId":"75","severity":1,"message":"82","line":29,"column":9,"nodeType":"77","messageId":"78","endLine":29,"endColumn":16},{"ruleId":"75","severity":1,"message":"83","line":8,"column":3,"nodeType":"77","messageId":"78","endLine":8,"endColumn":19},{"ruleId":"75","severity":1,"message":"84","line":10,"column":3,"nodeType":"77","messageId":"78","endLine":10,"endColumn":15},{"ruleId":"75","severity":1,"message":"85","line":22,"column":26,"nodeType":"77","messageId":"78","endLine":22,"endColumn":32},{"ruleId":"75","severity":1,"message":"86","line":4,"column":5,"nodeType":"77","messageId":"78","endLine":4,"endColumn":15},{"ruleId":"75","severity":1,"message":"87","line":11,"column":5,"nodeType":"77","messageId":"78","endLine":11,"endColumn":11},{"ruleId":"75","severity":1,"message":"88","line":17,"column":7,"nodeType":"77","messageId":"78","endLine":17,"endColumn":22},{"ruleId":"75","severity":1,"message":"89","line":44,"column":26,"nodeType":"77","messageId":"78","endLine":44,"endColumn":30},{"ruleId":"75","severity":1,"message":"90","line":44,"column":32,"nodeType":"77","messageId":"78","endLine":44,"endColumn":37},{"ruleId":"71","replacedBy":"91"},{"ruleId":"73","replacedBy":"92"},{"ruleId":"75","severity":1,"message":"93","line":6,"column":10,"nodeType":"77","messageId":"78","endLine":6,"endColumn":16},{"ruleId":"75","severity":1,"message":"94","line":21,"column":9,"nodeType":"77","messageId":"78","endLine":21,"endColumn":13},{"ruleId":"75","severity":1,"message":"95","line":24,"column":10,"nodeType":"77","messageId":"78","endLine":24,"endColumn":19},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useLazyQuery' is defined but never used.","'dispatch' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'history' is assigned a value but never used.","'BarChartOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'Footer' is assigned a value but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'headerContainer' is assigned a value but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.",["96"],["97"],"'format' is defined but never used.","'date' is assigned a value but never used.","'dayStatus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]