[{"/Users/rto/Desktop/Habit-Tracker/frontend/src/index.js":"1","/Users/rto/Desktop/Habit-Tracker/frontend/src/reportWebVitals.js":"2","/Users/rto/Desktop/Habit-Tracker/frontend/src/App.js":"3","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Home.js":"4","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Login.js":"5","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/TrackHabit.js":"6","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/HabitHistory.js":"7","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Progress.js":"8","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/Header.js":"9","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/NewHabit.js":"10","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/HabitCard.js":"11","/Users/rto/Desktop/Habit-Tracker/frontend/src/query.js":"12"},{"size":500,"mtime":1607443077526,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607443077526,"results":"15","hashOfConfig":"14"},{"size":1483,"mtime":1611767336955,"results":"16","hashOfConfig":"14"},{"size":3582,"mtime":1611771616660,"results":"17","hashOfConfig":"14"},{"size":13914,"mtime":1611746973962,"results":"18","hashOfConfig":"14"},{"size":3430,"mtime":1611770515496,"results":"19","hashOfConfig":"14"},{"size":3105,"mtime":1611770307603,"results":"20","hashOfConfig":"14"},{"size":6401,"mtime":1611770722487,"results":"21","hashOfConfig":"14"},{"size":828,"mtime":1611325934224,"results":"22","hashOfConfig":"14"},{"size":6021,"mtime":1611753570925,"results":"23","hashOfConfig":"14"},{"size":7022,"mtime":1611772379528,"results":"24","hashOfConfig":"14"},{"size":1890,"mtime":1611768656193,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"13uy812",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/rto/Desktop/Habit-Tracker/frontend/src/index.js",[],["53","54"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/reportWebVitals.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/App.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Home.js",["55"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Login.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/TrackHabit.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/HabitHistory.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Progress.js",["56","57"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/Header.js",["58","59"],"import React from 'react'\nimport { format } from 'date-fns'\nimport { Typography } from 'antd';\nimport { CalendarOutlined } from '@ant-design/icons';\n\nconst { Title } = Typography;\n\nconst headerContainer = {\n    display:'flex',\n    flexDirection:'row', \n    justifyContent:'space-between'\n}\nconst calendar = {\n    fontSize: '20px'\n}\n\nexport default function Header() {\n\n    const [curTime, setCurTime] = React.useState(format(new Date(), \"iiii, dd MMM YYY, HH:mm a\"));\n    React.useEffect(() => {\n        setInterval(() => {\n            const time = format(new Date(), \"iiii, dd MMM YYY, HH:mm a\");\n            setCurTime(time);\n        }, 1000)\n    }, []);\n\n    return (\n        <div style={headerContainer}>\n            <Title level={3} style={{fontFamily:'Krona One', fontWeight:500}}>{curTime}</Title>\n        </div>\n    )\n}\n","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/NewHabit.js",["60","61","62","63"],"import React, { useState } from 'react'\nimport { format } from 'date-fns'\nimport moment from 'moment';\nimport { \n    Form, \n    DatePicker, \n    Select,\n    InputNumber,\n    Input,\n    } from 'antd';\nimport { gql, useMutation } from '@apollo/client'\nimport { GET_USER_DETAILS, EDIT_HABIT } from '../../query';\nconst { RangePicker } = DatePicker;\n\nconst ADD_NEW_HABIT = gql`\n    mutation AddNewHabit($user_id: String!, $habit_name: String!, $type: habit_unit!, $note: String, $bad_habit: Boolean, $start_date: date, $end_date: date, $reps: Int, $duration: Int) {\n        insert_habits_one(object: {\n        name: $habit_name, \n        user: $user_id, \n        start_date: $start_date, \n        remainder_note: $note, \n        unit: $type, \n        end_date: $end_date, \n        reps: $reps,\n        duration: $duration\n        bad_habit: $bad_habit\n        }) {\n        id\n        }\n    }\n`;\n\nconst disabledDate = current => {\n    return current && current < moment().subtract(1, 'days');\n  }\n\nexport default function NewHabit({ setVisible, userID, editHabitDate }) {\n\n    const [form] = Form.useForm();\n    React.useEffect(()=>{\n        form.resetFields();\n    },[editHabitDate,form])\n    const [habitType, setHabitType] = useState(null);\n    const addNewHabit = useMutation(ADD_NEW_HABIT)[0];\n    const [editHabit] = useMutation(EDIT_HABIT);\n    const onFinish = (values) => {\n        console.log('values:::::::::::::::::::', format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"))\n        (editHabitDate)\n        ? editHabit({\n            variables: {\n                id: editHabitDate.id,\n                user_id: userID,\n                habit_name: values.habit_name,\n                type: values.type,\n                start_date: format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"),\n                end_date: format(new Date(values.date_range[1]._d), \"yyyy-MM-dd\"),\n                reps: values.reps_no ? values.reps_no : null,\n                note: values.note ? values.note : null,\n                duration: values.duration ? values.duration : null\n            },\n            refetchQueries: [{ query: GET_USER_DETAILS, variables: { email: userID } }],\n        })\n        : addNewHabit({\n            variables: {\n                user_id: userID,\n                habit_name: values.habit_name,\n                type: values.type,\n                start_date: format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"),\n                end_date: format(new Date(values.date_range[1]._d), \"yyyy-MM-dd\"),\n                reps: values.reps_no ? values.reps_no : null,\n                note: values.note ? values.note : null,\n                duration: values.duration ? values.duration : null\n            },\n            refetchQueries: [{ query: GET_USER_DETAILS, variables: { email: userID } }],\n        })\n        form.resetFields();\n        setVisible(false);\n    }\n    const onFormFail = (value) => {\n        setVisible(true);\n    }\n\n    return (\n        <Form\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 14 }}\n            layout=\"horizontal\"\n            form={form}\n            onFinish={onFinish}\n            onFinishFailed={onFormFail}\n            id='new_habit'\n        >\n            <Form.Item\n                name='habit_name'\n                label=\"Habit\"\n                rules={[{ required: true, message: \"Please input Habit's Name!\" }]}\n                initialValue={!!editHabitDate ? editHabitDate.name : \"\"}\n            >\n                <Input placeholder=\"Enter Name of the Habit\" />\n            </Form.Item>\n            <Form.Item\n                name='type'\n                label=\"Type\"\n                rules={[{ required: true, message: \"Please Select Type of Habit!\" }]}\n                initialValue={editHabitDate ? editHabitDate.unit : \"\"}\n            >\n                <Select onChange={(type)=>setHabitType(type)} placeholder=\"Enter Type of Habit\">\n                    <Select.Option value=\"CHECK\">Yes/No</Select.Option>\n                    <Select.Option value=\"REPS\">Integer Habit(Reps)</Select.Option>\n                    <Select.Option value=\"DURATION\">Timed Habit</Select.Option>\n                    {/* <Select.Option value=\"DURATION\">Bad Habit</Select.Option> */}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name='date_range'\n                label=\"Date\"\n                rules={[{ required: true, message: \"Please Select date!\" }]}\n                initialValue={editHabitDate ? [moment(editHabitDate.start_date), moment(editHabitDate.end_date)] : \"\"}\n            >\n                <RangePicker disabledDate={disabledDate} />\n            </Form.Item>\n            { (habitType === 'REPS' || editHabitDate && editHabitDate.unit === 'REPS') &&\n                <Form.Item \n                    name=\"reps_no\" \n                    label=\"Count\"\n                    rules={[{ required: true, message: \"Please Select Reps no.!\" }]}\n                    initialValue={editHabitDate ? editHabitDate.reps : \"\"}\n                >\n                    <InputNumber min={1}/>\n                </Form.Item>\n            }\n            { (habitType === 'DURATION' || editHabitDate && (editHabitDate.unit === 'DURATION')) &&\n                <Form.Item \n                    name=\"duration\" \n                    label=\"Duration(mins)\"\n                    rules={[{ required: true, message: \"Please Select Duration!\" }]}\n                    initialValue={editHabitDate ? editHabitDate.duration : \"\"}\n                >\n                    <InputNumber min={1}/>\n                </Form.Item>\n            }\n            <Form.Item\n                name='note'\n                label=\"Note\"\n                // rules={[{ required: true, message: \"Please input Habit's Name!\" }]}\n                initialValue={editHabitDate ? editHabitDate.remainder_note : \"\"}\n            >\n                <Input placeholder=\"Enter Note for the Habit\" defaultValue={editHabitDate ? editHabitDate.remainder_note : \"\"} />\n            </Form.Item>\n        </Form>\n    )\n}\n","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/HabitCard.js",["64"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/query.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":25,"column":26,"nodeType":"71","messageId":"72","endLine":25,"endColumn":32},{"ruleId":"69","severity":1,"message":"73","line":24,"column":7,"nodeType":"71","messageId":"72","endLine":24,"endColumn":21},{"ruleId":"69","severity":1,"message":"74","line":62,"column":23,"nodeType":"71","messageId":"72","endLine":62,"endColumn":35},{"ruleId":"69","severity":1,"message":"75","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":26},{"ruleId":"69","severity":1,"message":"76","line":13,"column":7,"nodeType":"71","messageId":"72","endLine":13,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":122,"column":37,"nodeType":"79","messageId":"80","endLine":122,"endColumn":39},{"ruleId":"77","severity":1,"message":"78","line":122,"column":54,"nodeType":"79","messageId":"80","endLine":122,"endColumn":56},{"ruleId":"77","severity":1,"message":"78","line":132,"column":41,"nodeType":"79","messageId":"80","endLine":132,"endColumn":43},{"ruleId":"77","severity":1,"message":"78","line":132,"column":58,"nodeType":"79","messageId":"80","endLine":132,"endColumn":60},{"ruleId":"81","severity":1,"message":"82","line":153,"column":42,"nodeType":"83","messageId":"84","endLine":153,"endColumn":44},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'Footer' is assigned a value but never used.","Identifier","unusedVar","'GET_HABIT_DATE' is assigned a value but never used.","'setDateRange' is assigned a value but never used.","'CalendarOutlined' is defined but never used.","'calendar' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]