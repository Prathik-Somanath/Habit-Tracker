[{"/Users/rto/Desktop/Habit-Tracker/frontend/src/index.js":"1","/Users/rto/Desktop/Habit-Tracker/frontend/src/reportWebVitals.js":"2","/Users/rto/Desktop/Habit-Tracker/frontend/src/App.js":"3","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Login.js":"4","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Home.js":"5","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/TrackHabit.js":"6","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/HabitHistory.js":"7","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/Header.js":"8","/Users/rto/Desktop/Habit-Tracker/frontend/src/query.js":"9","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/HabitCard.js":"10","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/NewHabit.js":"11"},{"size":500,"mtime":1607443077526,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607443077526,"results":"14","hashOfConfig":"13"},{"size":1464,"mtime":1611241671820,"results":"15","hashOfConfig":"13"},{"size":13818,"mtime":1610822570620,"results":"16","hashOfConfig":"13"},{"size":3118,"mtime":1611246297371,"results":"17","hashOfConfig":"13"},{"size":3343,"mtime":1611240506412,"results":"18","hashOfConfig":"13"},{"size":2328,"mtime":1611246182215,"results":"19","hashOfConfig":"13"},{"size":828,"mtime":1610817814511,"results":"20","hashOfConfig":"13"},{"size":1412,"mtime":1611243808155,"results":"21","hashOfConfig":"13"},{"size":3693,"mtime":1611240506413,"results":"22","hashOfConfig":"13"},{"size":6041,"mtime":1611240506413,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13uy812",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"/Users/rto/Desktop/Habit-Tracker/frontend/src/index.js",[],["49","50"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/reportWebVitals.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/App.js",["51"],"import React from 'react';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nimport { BrowserRouter as Router,\n         Switch,\n         Route,\n         Redirect,\n         useHistory\n} from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\n//Apollo client object. Used to make requests to the graphql API.\nconst client = new ApolloClient({\n  uri: 'https://habit-tracker.hasura.app/v1/graphql',\n  cache: new InMemoryCache(),\n  headers:{\n    'x-hasura-access': process.env.REACT_APP_API_PASS,\n  },\n});\n\nfunction PrivateRoute({ children, ...rest }) {\n\n  const sessionStore = sessionStorage.getItem('HabitTrackerUser');      // session storage user's emailID\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        !!sessionStore ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",       // redirect if not autheticated\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nfunction App() {\n\n  return (\n      <ApolloProvider client={client}>\n         <Router>\n             <Switch>\n                 <Route exact path=\"/login\">\n                     <Login />\n                 </Route>\n                 <PrivateRoute exact path=\"/\">\n                     <Home />\n                 </PrivateRoute>\n             </Switch>\n         </Router>\n      </ApolloProvider>\n  );\n}\n\nexport default App;","/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Login.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/Home.js",["52","53"],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/TrackHabit.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/HabitHistory.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/Header.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/query.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/HabitCard.js",[],"/Users/rto/Desktop/Habit-Tracker/frontend/src/components/dashboardComponents/NewHabit.js",["54","55","56","57","58","59","60","61","62","63","64","65"],"import React, { useState } from 'react'\nimport { format } from 'date-fns'\nimport moment from 'moment';\nimport { \n    Typography, \n    Form, \n    DatePicker, \n    Select,\n    InputNumber,\n    Input,\n    TimePicker,\n    Button\n    } from 'antd';\nimport { gql, useMutation } from '@apollo/client'\nimport { GET_USER_DETAILS, EDIT_HABIT } from '../../query';\nconst { RangePicker } = DatePicker;\n\nconst headerContainer = {\n    display:'flex',\n    flexDirection:'row',\n    justifyContent:'space-between'\n}\n\nconst ADD_NEW_HABIT = gql`\n    mutation AddNewHabit($user_id: String!, $habit_name: String!, $type: habit_unit!, $note: String, $bad_habit: Boolean, $start_date: date, $end_date: date, $reps: Int, $duration: Int) {\n        insert_habits_one(object: {\n        name: $habit_name, \n        user: $user_id, \n        start_date: $start_date, \n        remainder_note: $note, \n        unit: $type, \n        end_date: $end_date, \n        reps: $reps,\n        duration: $duration\n        bad_habit: $bad_habit\n        }) {\n        id\n        }\n    }\n`;\n\nexport default function NewHabit({ setVisible, userID, editHabitDate }) {\n\n    const [form] = Form.useForm();\n    React.useEffect(()=>{\n        form.resetFields();\n    },[editHabitDate])\n    const [habitType, setHabitType] = useState(null);\n    const [addNewHabit, {data, error}] = useMutation(ADD_NEW_HABIT);\n    const [editHabit] = useMutation(EDIT_HABIT);\n    const onFinish = (values) => {\n        console.log('values:::::::::::::::::::', format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"))\n        {(editHabitDate)\n        ? editHabit({\n            variables: {\n                id: editHabitDate.id,\n                user_id: userID,\n                habit_name: values.habit_name,\n                type: values.type,\n                start_date: format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"),\n                end_date: format(new Date(values.date_range[1]._d), \"yyyy-MM-dd\"),\n                reps: values.reps_no ? values.reps_no : null,\n                note: values.note ? values.note : null,\n                duration: values.duration ? values.duration : null\n            },\n            refetchQueries: [{ query: GET_USER_DETAILS, variables: { email: userID } }],\n        })\n        : addNewHabit({\n            variables: {\n                user_id: userID,\n                habit_name: values.habit_name,\n                type: values.type,\n                start_date: format(new Date(values.date_range[0]._d), \"yyyy-MM-dd\"),\n                end_date: format(new Date(values.date_range[1]._d), \"yyyy-MM-dd\"),\n                reps: values.reps_no ? values.reps_no : null,\n                note: values.note ? values.note : null,\n                duration: values.duration ? values.duration : null\n            },\n            refetchQueries: [{ query: GET_USER_DETAILS, variables: { email: userID } }],\n        })}\n        form.resetFields();\n        setVisible(false);\n    }\n    const onFormFail = (value) => {\n        setVisible(true);\n    }\n\n    return (\n        <Form\n            labelCol={{ span: 6 }}\n            wrapperCol={{ span: 14 }}\n            layout=\"horizontal\"\n            form={form}\n            onFinish={onFinish}\n            onFinishFailed={onFormFail}\n            id='new_habit'\n        >\n            <Form.Item\n                name='habit_name'\n                label=\"Habit\"\n                rules={[{ required: true, message: \"Please input Habit's Name!\" }]}\n                initialValue={!!editHabitDate ? editHabitDate.name : \"\"}\n            >\n                <Input placeholder=\"Enter Name of the Habit\" />\n            </Form.Item>\n            <Form.Item\n                name='type'\n                label=\"Type\"\n                rules={[{ required: true, message: \"Please Select Type of Habit!\" }]}\n                initialValue={editHabitDate ? editHabitDate.unit : \"\"}\n            >\n                <Select onChange={(type)=>setHabitType(type)} placeholder=\"Enter Type of Habit\">\n                    <Select.Option value=\"CHECK\">Yes/No</Select.Option>\n                    <Select.Option value=\"REPS\">Integer Habit(Reps)</Select.Option>\n                    <Select.Option value=\"DURATION\">Timed Habit</Select.Option>\n                    {/* <Select.Option value=\"DURATION\">Bad Habit</Select.Option> */}\n                </Select>\n            </Form.Item>\n            <Form.Item\n                name='date_range'\n                label=\"Date\"\n                rules={[{ required: true, message: \"Please Select date!\" }]}\n                initialValue={editHabitDate ? [moment(editHabitDate.start_date), moment(editHabitDate.end_date)] : \"\"}\n            >\n                <RangePicker />\n            </Form.Item>\n            { (habitType === 'REPS' || editHabitDate && editHabitDate.unit === 'REPS') &&\n                <Form.Item \n                    name=\"reps_no\" \n                    label=\"Count\"\n                    rules={[{ required: true, message: \"Please Select Reps no.!\" }]}\n                    initialValue={editHabitDate ? editHabitDate.reps : \"\"}\n                >\n                    <InputNumber/>\n                </Form.Item>\n            }\n            { (habitType === 'DURATION' || editHabitDate && (editHabitDate.unit === 'DURATION')) &&\n                <Form.Item \n                    name=\"duration\" \n                    label=\"Duration(mins)\"\n                    rules={[{ required: true, message: \"Please Select Duration!\" }]}\n                    initialValue={editHabitDate ? editHabitDate.duration : \"\"}\n                >\n                    <InputNumber />\n                </Form.Item>\n            }\n            <Form.Item\n                name='note'\n                label=\"Note\"\n                // rules={[{ required: true, message: \"Please input Habit's Name!\" }]}\n                initialValue={editHabitDate ? editHabitDate.remainder_note : \"\"}\n            >\n                <Input placeholder=\"Enter Note for the Habit\" defaultValue={editHabitDate ? editHabitDate.remainder_note : \"\"} />\n            </Form.Item>\n        </Form>\n    )\n}\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":9,"column":10,"nodeType":"72","messageId":"73","endLine":9,"endColumn":20},{"ruleId":"70","severity":1,"message":"74","line":8,"column":3,"nodeType":"72","messageId":"73","endLine":8,"endColumn":19},{"ruleId":"70","severity":1,"message":"75","line":23,"column":26,"nodeType":"72","messageId":"73","endLine":23,"endColumn":32},{"ruleId":"70","severity":1,"message":"76","line":5,"column":5,"nodeType":"72","messageId":"73","endLine":5,"endColumn":15},{"ruleId":"70","severity":1,"message":"77","line":11,"column":5,"nodeType":"72","messageId":"73","endLine":11,"endColumn":15},{"ruleId":"70","severity":1,"message":"78","line":12,"column":5,"nodeType":"72","messageId":"73","endLine":12,"endColumn":11},{"ruleId":"70","severity":1,"message":"79","line":18,"column":7,"nodeType":"72","messageId":"73","endLine":18,"endColumn":22},{"ruleId":"80","severity":1,"message":"81","line":47,"column":7,"nodeType":"82","endLine":47,"endColumn":22,"suggestions":"83"},{"ruleId":"70","severity":1,"message":"84","line":49,"column":26,"nodeType":"72","messageId":"73","endLine":49,"endColumn":30},{"ruleId":"70","severity":1,"message":"85","line":49,"column":32,"nodeType":"72","messageId":"73","endLine":49,"endColumn":37},{"ruleId":"86","severity":1,"message":"87","line":53,"column":9,"nodeType":"88","messageId":"89","endLine":80,"endColumn":12},{"ruleId":"90","severity":1,"message":"91","line":127,"column":37,"nodeType":"92","messageId":"93","endLine":127,"endColumn":39},{"ruleId":"90","severity":1,"message":"91","line":127,"column":54,"nodeType":"92","messageId":"93","endLine":127,"endColumn":56},{"ruleId":"90","severity":1,"message":"91","line":137,"column":41,"nodeType":"92","messageId":"93","endLine":137,"endColumn":43},{"ruleId":"90","severity":1,"message":"91","line":137,"column":58,"nodeType":"92","messageId":"93","endLine":137,"endColumn":60},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'BarChartOutlined' is defined but never used.","'Footer' is assigned a value but never used.","'Typography' is defined but never used.","'TimePicker' is defined but never used.","'Button' is defined but never used.","'headerContainer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'data' is assigned a value but never used.","'error' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},"Update the dependencies array to be: [editHabitDate, form]",{"range":"99","text":"100"},[1215,1230],"[editHabitDate, form]"]