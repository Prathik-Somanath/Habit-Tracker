[{"D:\\github\\Habit-Tracker\\frontend\\src\\index.js":"1","D:\\github\\Habit-Tracker\\frontend\\src\\reportWebVitals.js":"2","D:\\github\\Habit-Tracker\\frontend\\src\\App.js":"3","D:\\github\\Habit-Tracker\\frontend\\src\\store.js":"4","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Home.js":"5","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Login.js":"6","D:\\github\\Habit-Tracker\\frontend\\src\\components\\TrackHabit.js":"7","D:\\github\\Habit-Tracker\\frontend\\src\\components\\AllHabits.js":"8","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Progress.js":"9","D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\HabitCard.js":"10","D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\Header.js":"11","D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\NewHabit.js":"12","D:\\github\\Habit-Tracker\\frontend\\src\\query.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1861,"mtime":1610178127111,"results":"17","hashOfConfig":"15"},{"size":992,"mtime":1609003385253,"results":"18","hashOfConfig":"15"},{"size":3202,"mtime":1609945406984,"results":"19","hashOfConfig":"15"},{"size":13919,"mtime":1609225527142,"results":"20","hashOfConfig":"15"},{"size":2502,"mtime":1610178990373,"results":"21","hashOfConfig":"15"},{"size":1445,"mtime":1609229362056,"results":"22","hashOfConfig":"15"},{"size":1440,"mtime":1609229391207,"results":"23","hashOfConfig":"15"},{"size":1533,"mtime":1610178036450,"results":"24","hashOfConfig":"15"},{"size":861,"mtime":1609944341999,"results":"25","hashOfConfig":"15"},{"size":3885,"mtime":1610178884487,"results":"26","hashOfConfig":"15"},{"size":500,"mtime":1610178911206,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ng3klm",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\github\\Habit-Tracker\\frontend\\src\\index.js",[],["58","59"],"D:\\github\\Habit-Tracker\\frontend\\src\\reportWebVitals.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\App.js",["60","61","62","63","64"],"D:\\github\\Habit-Tracker\\frontend\\src\\store.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\Home.js",["65"],"import React from 'react';\r\nimport { \r\n    Layout, \r\n    Menu,\r\n    Spin\r\n } from 'antd';\r\nimport {\r\n  BarChartOutlined,\r\n  UserOutlined,\r\n  FormOutlined,\r\n} from '@ant-design/icons';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { BrowserRouter as Router,\r\n    Link,\r\n    Route,\r\n    Switch,\r\n} from 'react-router-dom';\r\nimport TrackHabit from './TrackHabit';\r\nimport AllHabits from './AllHabits';\r\nimport Progress from './Progress';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst headerStyle = {\r\n    fontFamily: '\"Krona One\", Sans-serif',\r\n    fontSize: '14pt',\r\n    color: '#fff',\r\n    textAlign: 'center'\r\n};\r\n\r\nconst loadingStyle = {\r\n    textAlign: 'center',\r\n    flex: 1,\r\n    borderRadius: '4px',\r\n    padding: '30px 50px',\r\n    margin: '20px 0',\r\n    marginTop: '50vh'\r\n}\r\n\r\nconst getUser = gql `\r\n    query getUser($email: String!){\r\n    users(where: {email: {_eq: $email}}) {\r\n      full_name\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Home () {\r\n\r\n    const sessionStore = sessionStorage.getItem('HabitTrackerUser');\r\n    \r\n    const { loading, error, data } = useQuery( getUser, { variables: {email:sessionStore} } );\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div style={loadingStyle} >\r\n                <Spin/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        console.log(error);\r\n        return (\r\n            <div style={loadingStyle}>\r\n                <h4> Something went wrong! </h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    {   const user = data.users[0];\r\n        return (\r\n        <Router>\r\n        <Layout style={{height:\"100vh\"}}>\r\n            <Sider\r\n            style={{\r\n                overflow: 'auto',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                left: 0,\r\n            }}\r\n            >\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                <Header className=\"site-layout-background\" style={{ padding: 0 }} >\r\n                    <h1 style={headerStyle}>Habit Tracker</h1>\r\n                </Header>\r\n                <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n                    {user.full_name}\r\n                    <Link to=\"/\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\" icon={<FormOutlined />}>\r\n                    All Habits\r\n                    <Link to=\"/all\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"3\" icon={<BarChartOutlined />}>\r\n                    Progress\r\n                    <Link to=\"/progress\" />\r\n                </Menu.Item>\r\n            </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\" style={{ marginLeft: 200 }}>\r\n            <Content style={{ margin: '24px 16px 0', overflow: 'initial', flex:1, height: '100vh' }}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={TrackHabit} />\r\n                    <Route exact path=\"/all\" component={AllHabits} />\r\n                    <Route exact path=\"/progress\" component={Progress} />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Layout>\r\n        </Router>\r\n        )\r\n    }\r\n}","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Login.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\TrackHabit.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\AllHabits.js",["66","67"],"import React from 'react';\r\nimport { \r\n    Spin\r\n } from 'antd';\r\nimport { store } from '../store';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst loadingStyle = {\r\n    textAlign: 'center',\r\n    flex: 1,\r\n    borderRadius: '4px',\r\n    padding: '30px 50px',\r\n    margin: '20px 0',\r\n    marginTop: '50vh'\r\n}\r\n\r\nconst getUser = gql `\r\n    query getUser($email: String!){\r\n    users(where: {email: {_eq: $email}}) {\r\n      full_name\r\n      createdAt\r\n      email\r\n      habits {\r\n        bad_habit\r\n        end_date\r\n        habit_cycle\r\n        name\r\n        id\r\n        remainder_note\r\n        reminder_times\r\n        start_date\r\n        streak\r\n        unit\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default function AllHabits () {\r\n\r\n    //using global store with context\r\n    const { state } = React.useContext(store); \r\n\r\n    const sessionStore = sessionStorage.getItem('HabitTrackerUser');\r\n    \r\n    const { loading, error, data } = useQuery( getUser, { variables: {email:sessionStore} } );\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div style={loadingStyle} >\r\n                <Spin/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        console.log(error);\r\n        return (\r\n            <div style={loadingStyle}>\r\n                <h4> Something went wrong! </h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    {   const user = data.users[0];\r\n        return (\r\n        <h2>All Habits</h2>\r\n        )\r\n    }\r\n}","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Progress.js",["68","69"],"import React from 'react';\r\nimport { \r\n    Spin\r\n } from 'antd';\r\nimport { store } from '../store';\r\nimport { useQuery, gql } from '@apollo/client';\r\n\r\nconst loadingStyle = {\r\n    textAlign: 'center',\r\n    flex: 1,\r\n    borderRadius: '4px',\r\n    padding: '30px 50px',\r\n    margin: '20px 0',\r\n    marginTop: '50vh'\r\n}\r\n\r\nconst getUser = gql `\r\n    query getUser($email: String!){\r\n    users(where: {email: {_eq: $email}}) {\r\n      full_name\r\n      createdAt\r\n      email\r\n      habits {\r\n        bad_habit\r\n        end_date\r\n        habit_cycle\r\n        name\r\n        id\r\n        remainder_note\r\n        reminder_times\r\n        start_date\r\n        streak\r\n        unit\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Progress () {\r\n\r\n    //using global store with context\r\n    const { state } = React.useContext(store); \r\n\r\n    const sessionStore = sessionStorage.getItem('HabitTrackerUser');\r\n    \r\n    const { loading, error, data } = useQuery( getUser, { variables: {email:sessionStore} } );\r\n\r\n    if (loading) {\r\n        return (\r\n            <div style={loadingStyle} >\r\n                <Spin/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        console.log(error);\r\n        return (\r\n            <div style={loadingStyle}>\r\n                <h4> Something went wrong! </h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    {   const user = data.users[0];\r\n        return (\r\n        <h2>Progress</h2>\r\n        )\r\n    }\r\n}","D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\HabitCard.js",["70","71","72"],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\Header.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\NewHabit.js",["73","74","75","76","77"],"D:\\github\\Habit-Tracker\\frontend\\src\\query.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":13},{"ruleId":"82","severity":1,"message":"86","line":11,"column":15,"nodeType":"84","messageId":"85","endLine":11,"endColumn":27},{"ruleId":"82","severity":1,"message":"87","line":26,"column":18,"nodeType":"84","messageId":"85","endLine":26,"endColumn":26},{"ruleId":"82","severity":1,"message":"88","line":28,"column":28,"nodeType":"84","messageId":"85","endLine":28,"endColumn":44},{"ruleId":"82","severity":1,"message":"89","line":29,"column":9,"nodeType":"84","messageId":"85","endLine":29,"endColumn":16},{"ruleId":"82","severity":1,"message":"90","line":22,"column":26,"nodeType":"84","messageId":"85","endLine":22,"endColumn":32},{"ruleId":"82","severity":1,"message":"91","line":42,"column":13,"nodeType":"84","messageId":"85","endLine":42,"endColumn":18},{"ruleId":"82","severity":1,"message":"92","line":66,"column":15,"nodeType":"84","messageId":"85","endLine":66,"endColumn":19},{"ruleId":"82","severity":1,"message":"91","line":42,"column":13,"nodeType":"84","messageId":"85","endLine":42,"endColumn":18},{"ruleId":"82","severity":1,"message":"92","line":65,"column":15,"nodeType":"84","messageId":"85","endLine":65,"endColumn":19},{"ruleId":"82","severity":1,"message":"93","line":6,"column":10,"nodeType":"84","messageId":"85","endLine":6,"endColumn":16},{"ruleId":"82","severity":1,"message":"94","line":21,"column":9,"nodeType":"84","messageId":"85","endLine":21,"endColumn":13},{"ruleId":"82","severity":1,"message":"95","line":24,"column":10,"nodeType":"84","messageId":"85","endLine":24,"endColumn":19},{"ruleId":"82","severity":1,"message":"96","line":4,"column":5,"nodeType":"84","messageId":"85","endLine":4,"endColumn":15},{"ruleId":"82","severity":1,"message":"97","line":11,"column":5,"nodeType":"84","messageId":"85","endLine":11,"endColumn":11},{"ruleId":"82","severity":1,"message":"98","line":17,"column":7,"nodeType":"84","messageId":"85","endLine":17,"endColumn":22},{"ruleId":"82","severity":1,"message":"99","line":44,"column":26,"nodeType":"84","messageId":"85","endLine":44,"endColumn":30},{"ruleId":"82","severity":1,"message":"100","line":44,"column":32,"nodeType":"84","messageId":"85","endLine":44,"endColumn":37},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","'useLazyQuery' is defined but never used.","'dispatch' is assigned a value but never used.","'setAuthenticated' is assigned a value but never used.","'history' is assigned a value but never used.","'Footer' is assigned a value but never used.","'state' is assigned a value but never used.","'user' is assigned a value but never used.","'format' is defined but never used.","'date' is assigned a value but never used.","'dayStatus' is assigned a value but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'headerContainer' is assigned a value but never used.","'data' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]