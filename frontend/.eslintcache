[{"D:\\github\\Habit-Tracker\\frontend\\src\\index.js":"1","D:\\github\\Habit-Tracker\\frontend\\src\\reportWebVitals.js":"2","D:\\github\\Habit-Tracker\\frontend\\src\\App.js":"3","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Login.js":"4","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Home.js":"5","D:\\github\\Habit-Tracker\\frontend\\src\\components\\TrackHabit.js":"6","D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\NewHabit.js":"7","D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\Header.js":"8","D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\HabitCard.js":"9","D:\\github\\Habit-Tracker\\frontend\\src\\query.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1607,"mtime":1610824461551,"results":"14","hashOfConfig":"12"},{"size":14160,"mtime":1610824461553,"results":"15","hashOfConfig":"12"},{"size":2960,"mtime":1610824461552,"results":"16","hashOfConfig":"12"},{"size":3029,"mtime":1610834038056,"results":"17","hashOfConfig":"12"},{"size":6026,"mtime":1610835065354,"results":"18","hashOfConfig":"12"},{"size":861,"mtime":1610817791595,"results":"19","hashOfConfig":"12"},{"size":3204,"mtime":1610832916745,"results":"20","hashOfConfig":"12"},{"size":1070,"mtime":1610834763464,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ng3klm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\github\\Habit-Tracker\\frontend\\src\\index.js",[],["45","46"],"D:\\github\\Habit-Tracker\\frontend\\src\\reportWebVitals.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\App.js",["47","48"],"import React from 'react';\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\nimport { BrowserRouter as Router,\r\n         Switch,\r\n         Route,\r\n         Redirect,\r\n         useHistory\r\n} from 'react-router-dom';\r\nimport 'antd/dist/antd.css';\r\n\r\n//Apollo client object. Used to make requests to the graphql API.\r\nconst client = new ApolloClient({\r\n  uri: 'https://habit-tracker.hasura.app/v1/graphql',\r\n  cache: new InMemoryCache(),\r\n  headers:{\r\n    'x-hasura-access': process.env.REACT_APP_API_PASS,\r\n  },\r\n});\r\n\r\nfunction PrivateRoute({ children, ...rest }) {\r\n\r\n  const sessionStore = sessionStorage.getItem('HabitTrackerUser');      // session storage user's emailID\r\n  const [ isAuthenticated, setAuthenticated ] = React.useState(!!sessionStore);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",       // redirect if not autheticated\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <ApolloProvider client={client}>\r\n         <Router>\r\n             <Switch>\r\n                 <Route exact path=\"/login\">\r\n                     <Login />\r\n                 </Route>\r\n                 <PrivateRoute exact path=\"/\">\r\n                     <Home />\r\n                 </PrivateRoute>\r\n             </Switch>\r\n         </Router>\r\n      </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;","D:\\github\\Habit-Tracker\\frontend\\src\\components\\Login.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\Home.js",["49","50","51"],"import React from 'react';\r\nimport { \r\n    Layout, \r\n    Menu,\r\n    Spin\r\n } from 'antd';\r\nimport {\r\n  BarChartOutlined,\r\n  UserOutlined,\r\n  FormOutlined,\r\n  LogoutOutlined,\r\n} from '@ant-design/icons';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport { BrowserRouter as Router,\r\n    Link,\r\n    Route,\r\n    Switch,\r\n    useHistory,\r\n} from 'react-router-dom';\r\nimport TrackHabit from './TrackHabit';\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\n\r\nconst headerStyle = {\r\n    fontFamily: '\"Krona One\", Sans-serif',\r\n    fontSize: '14pt',\r\n    color: '#fff',\r\n    textAlign: 'center'\r\n};\r\n\r\nconst loadingStyle = {\r\n    textAlign: 'center',\r\n    flex: 1,\r\n    borderRadius: '4px',\r\n    padding: '30px 50px',\r\n    margin: '20px 0',\r\n    marginTop: '50vh'\r\n}\r\n\r\nconst getUser = gql `\r\n    query getUser($email: String!){\r\n    users(where: {email: {_eq: $email}}) {\r\n      full_name\r\n    }\r\n  }\r\n`\r\n\r\nexport default function Home () {\r\n\r\n    const sessionStore = sessionStorage.getItem('HabitTrackerUser');\r\n    const history = useHistory();\r\n    const { loading, error, data } = useQuery( getUser, { variables: {email:sessionStore} } );\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div style={loadingStyle} >\r\n                <Spin/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (error) {\r\n        console.log(error);\r\n        return (\r\n            <div style={loadingStyle}>\r\n                <h4> Something went wrong! </h4>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    {   const user = data.users[0];\r\n        return (\r\n        <Router>\r\n        <Layout style={{height:\"100vh\"}}>\r\n            <Sider\r\n            style={{\r\n                overflow: 'auto',\r\n                height: '100vh',\r\n                position: 'fixed',\r\n                left: 0,\r\n            }}\r\n            >\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\r\n                <Header className=\"site-layout-background\" style={{ padding: 0 }} >\r\n                    <h1 style={headerStyle}>Habit Tracker</h1>\r\n                </Header>\r\n                <Menu.Item key=\"1\" icon={<UserOutlined />}>\r\n                    {user.full_name}\r\n                    <Link to=\"/\" />\r\n                </Menu.Item>\r\n                <Menu.Item key=\"4\" icon={<LogoutOutlined />} onClick={()=>{\r\n                    sessionStorage.clear();\r\n                    history.push('/login');\r\n                }}>\r\n                    Logout\r\n                </Menu.Item>\r\n            </Menu>\r\n            </Sider>\r\n            <Layout className=\"site-layout\" style={{ marginLeft: 200 }}>\r\n            <Content style={{ margin: '24px 16px 0', overflow: 'initial', flex:1, height: '100vh' }}>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={TrackHabit} />\r\n                </Switch>\r\n            </Content>\r\n            </Layout>\r\n        </Layout>\r\n        </Router>\r\n        )\r\n    }\r\n}","D:\\github\\Habit-Tracker\\frontend\\src\\components\\TrackHabit.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\NewHabit.js",["52","53","54","55","56","57","58","59","60","61","62","63"],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\Header.js",[],"D:\\github\\Habit-Tracker\\frontend\\src\\components\\dashboardComponents\\HabitCard.js",["64"],"D:\\github\\Habit-Tracker\\frontend\\src\\query.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":9,"column":10,"nodeType":"71","messageId":"72","endLine":9,"endColumn":20},{"ruleId":"69","severity":1,"message":"73","line":25,"column":28,"nodeType":"71","messageId":"72","endLine":25,"endColumn":44},{"ruleId":"69","severity":1,"message":"74","line":8,"column":3,"nodeType":"71","messageId":"72","endLine":8,"endColumn":19},{"ruleId":"69","severity":1,"message":"75","line":10,"column":3,"nodeType":"71","messageId":"72","endLine":10,"endColumn":15},{"ruleId":"69","severity":1,"message":"76","line":22,"column":26,"nodeType":"71","messageId":"72","endLine":22,"endColumn":32},{"ruleId":"69","severity":1,"message":"77","line":5,"column":5,"nodeType":"71","messageId":"72","endLine":5,"endColumn":15},{"ruleId":"69","severity":1,"message":"78","line":11,"column":5,"nodeType":"71","messageId":"72","endLine":11,"endColumn":15},{"ruleId":"69","severity":1,"message":"79","line":12,"column":5,"nodeType":"71","messageId":"72","endLine":12,"endColumn":11},{"ruleId":"69","severity":1,"message":"80","line":18,"column":7,"nodeType":"71","messageId":"72","endLine":18,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":47,"column":7,"nodeType":"83","endLine":47,"endColumn":22,"suggestions":"84"},{"ruleId":"69","severity":1,"message":"85","line":49,"column":26,"nodeType":"71","messageId":"72","endLine":49,"endColumn":30},{"ruleId":"69","severity":1,"message":"86","line":49,"column":32,"nodeType":"71","messageId":"72","endLine":49,"endColumn":37},{"ruleId":"69","severity":1,"message":"87","line":50,"column":12,"nodeType":"71","messageId":"72","endLine":50,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":124,"column":37,"nodeType":"90","messageId":"91","endLine":124,"endColumn":39},{"ruleId":"88","severity":1,"message":"89","line":124,"column":54,"nodeType":"90","messageId":"91","endLine":124,"endColumn":56},{"ruleId":"88","severity":1,"message":"89","line":133,"column":41,"nodeType":"90","messageId":"91","endLine":133,"endColumn":43},{"ruleId":"88","severity":1,"message":"89","line":133,"column":58,"nodeType":"90","messageId":"91","endLine":133,"endColumn":60},{"ruleId":"69","severity":1,"message":"92","line":7,"column":10,"nodeType":"71","messageId":"72","endLine":7,"endColumn":16},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'setAuthenticated' is assigned a value but never used.","'BarChartOutlined' is defined but never used.","'FormOutlined' is defined but never used.","'Footer' is assigned a value but never used.","'Typography' is defined but never used.","'TimePicker' is defined but never used.","'Button' is defined but never used.","'headerContainer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["95"],"'data' is assigned a value but never used.","'error' is assigned a value but never used.","'editHabit' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'format' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [editHabitDate, form]",{"range":"98","text":"99"},[1261,1276],"[editHabitDate, form]"]